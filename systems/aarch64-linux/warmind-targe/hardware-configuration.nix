# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/44444444-4444-4444-8888-888888888888";
      fsType = "ext4";
    };

  fileSystems."/var/lib/kubelet/pods/ed453eac-76f4-497c-a600-e406eec4a6cb/volumes/kubernetes.io~projected/kube-api-access-vwjjz" =
    { device = "tmpfs";
      fsType = "tmpfs";
    };

  fileSystems."/var/lib/kubelet/pods/e9f2daa4-79fa-4110-bb77-9f814189a84b/volumes/kubernetes.io~projected/kube-api-access-ggz2b" =
    { device = "tmpfs";
      fsType = "tmpfs";
    };

  fileSystems."/var/lib/kubelet/pods/7a7d1dbc-9589-4a49-8093-4c9535e7004e/volumes/kubernetes.io~projected/kube-api-access-rm4mx" =
    { device = "tmpfs";
      fsType = "tmpfs";
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.cni0.useDHCP = lib.mkDefault true;
  # networking.interfaces.docker0.useDHCP = lib.mkDefault true;
  # networking.interfaces.end0.useDHCP = lib.mkDefault true;
  # networking.interfaces.tailscale0.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth1082cbb0.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth4c015f3f.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth577f99de.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth7931159d.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlan0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "aarch64-linux";
}
